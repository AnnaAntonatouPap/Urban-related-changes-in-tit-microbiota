########################------------------------------------ CSS Data Normalization-----------------------------------------------##########################

# install package
BiocManager::install("metagenomeSeq")
library(metagenomeSeq)

## Convert the phyloseq object to a metagenomeSeq object (MRexperiment).
metagenome.obj <- phyloseq_to_metagenomeSeq(data.use)
## Calculate the proper percentile by which to normalize counts
cNstat <- metagenomeSeq::cumNormStatFast(metagenome.obj) 
# cNstat  #0.5
## Normalise counts
metagenome.obj <- metagenomeSeq::cumNorm(metagenome.obj, p = cNstat)
## Export the normalised count table
metag.norm.counts <- metagenomeSeq::MRcounts(metagenome.obj, norm = TRUE)
## Add a pseudocount of 0.0001 to the table and log transform
metag.norm.counts_log <- log(metag.norm.counts+0.0001)
## Substract the value from log of pseudocount to preserve zeros of the original counts
metag.norm.counts_log2 <- metag.norm.counts_log-(log(0.0001))

## Make a new phyloseq object with with the new OTU table
otu_normMG.obj <- otu_table(metag.norm.counts_log2, taxa_are_rows = TRUE)
phylo_normMG.obj <- phyloseq(otu_normMG.obj, biom_otu_tax@tax_table, meta)
phylo_normMG.obj <- merge_phyloseq(phylo_normMG.obj, tree)

#########################------------------------------------- NMDS with ENVFIT based on Bray Curtis-------------------------------###########################
# Prepare data for NMDS/envfit and Anosim
otu_table_CSS =as(otu_table(phylo_normMG.obj),"matrix") 
# transpose matrix
otu_table_CSS <- t(otu_table_CSS)
# meta data
meta_CSS<-phylo_normMG.obj@sam_data

set.seed(123)
nmds = metaMDS(otu_table_CSS, distance = "bray")
nmds
plot(nmds)

#extract NMDS scores (x and y coordinates)
data.scores = as.data.frame(scores(nmds))
# Run envfit
enn = envfit(nmds, en_use, permutations = 9999, na.rm = TRUE) # en_use: subset of the meta data(meta_CSS) we are interested in

# extract info from enfit to plot with gglpot
en_coord_cont = as.data.frame(scores(enn, "vectors")) * ordiArrowMul(enn)
en_coord_cat = as.data.frame(scores(enn, "factors")) * ordiArrowMul(enn)

# Plot 1 ( Urban status indicated with colors, Sites with shapes)
gg1 = ggplot(data = data.scores, aes(x = NMDS1, y = NMDS2)) + 
  geom_point(data = data.scores, aes(colour = Urban_status,shape=Site_name), size = 3, alpha = 0.5) + 
  scale_colour_manual(values = c("chartreuse4","antiquewhite4"))  + 
  scale_shape_manual(values=c(17,16,3,4,15,18,8))+
  geom_segment(aes(x = 0, y = 0, xend = NMDS1, yend = NMDS2), 
               data = en_coord_cont, size =0.5, alpha = 0.5, colour =c("black","blue","yellow","palegreen", 
                                                                       "turquoise3","red")) + 
  geom_text(data = en_coord_cont, aes(x = NMDS1, y = NMDS2), colour = "grey30", 
            fontface = "bold", label = (en_coord_cont$label),size=2) + 
  theme(axis.title = element_text(size = 10, face = "bold", colour = "grey30"), 
        panel.background = element_blank(), panel.border = element_rect(fill = NA, colour = "grey30"), 
        axis.ticks = element_blank(), axis.text = element_blank(), legend.key = element_blank(), 
        legend.title = element_text(size = 10, face = "bold", colour = "grey30"), 
        legend.text = element_text(size = 9, colour = "grey30")) + 
  labs(colour = "Urban_status")
gg1

# Plot 2 ( Isa categories indicated with colors, Sites with shapes)
gg2 = ggplot(data = data.scores, aes(x = NMDS1, y = NMDS2)) + 
  geom_point(data = data.scores, aes(colour = ISA_category,shape=Site_name), size = 3, alpha = 0.5) + 
  scale_colour_manual(values = c("antiquewhite4","chartreuse4"))  + 
  scale_shape_manual(values=c(17,16,3,4,15,18,8))+
  geom_segment(aes(x = 0, y = 0, xend = NMDS1, yend = NMDS2), 
               data = en_coord_cont, size =0.5, alpha = 0.5, colour =c("black","blue","yellow","palegreen", 
                                                                       "turquoise3","red")) + 
  geom_text(data = en_coord_cont, aes(x = NMDS1, y = NMDS2), colour = "grey30", 
            fontface = "bold", label = (en_coord_cont$label),size=2) + 
  theme(axis.title = element_text(size = 10, face = "bold", colour = "grey30"), 
        panel.background = element_blank(), panel.border = element_rect(fill = NA, colour = "grey30"), 
        axis.ticks = element_blank(), axis.text = element_blank(), legend.key = element_blank(), 
        legend.title = element_text(size = 10, face = "bold", colour = "grey30"), 
        legend.text = element_text(size = 9, colour = "grey30")) + 
  labs(colour = "ISA_category")
gg2
ggsave("envfit_NMDS_finalEDIT.pdf" , gg2, width=150, units ="mm",dpi=300)

###########################-------------------------------------ANOSIM--------------------------------------------------------#######################################

# Anosim test based on Bray-Curtis and Weighted Unifrac to test the diffrence between Urban vs. Rural, Smpling sites and low ISA levels vs. High ISA levels

# Urban status / Bray-Curtis
ano_CSS_BCurtis_Urban_status = anosim(otu_table_CSS, meta_for_CSS$Urban_status, distance = "bray",permutations = 9999)

# Urban status / Weighted Unifrac
unifrac.dist <- UniFrac(phylo_normMG.obj, 
                        weighted = TRUE, 
                        normalized = TRUE,  
                        parallel = FALSE, 
                        fast = TRUE)
ano_CSS_Unifrac_Urban_status = anosim(unifrac.dist, meta_for_CSS$Urban_status, permutations = 9999)

## Same as above for ISA categories and Sampling Sites 
